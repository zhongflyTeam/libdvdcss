INSTALL file for libdvdcss, a DVD access library


Configuring libdvdcss
=====================

libdvdcss uses the Meson build system. A typical way to configure it is:

  meson setup build --prefix=/usr

The `build' directory can be set to whatever you want, but in-tree builds
are not allowed. See `meson configure' for all the available options.


Building libdvdcss
==================

Once configured, change to the build directory and run `ninja' 
to build libdvdcss.

If you have player keys, you need to put them in the file csskeys.h, before
configuring libdvdcss to enable the "key" method (the one from libcss).


Installing libdvdcss
====================

You can install libdvdcss by running `meson install' inside the build
directory.


Building libdvdcss for Windows
==============================

There are two alternative ways to build libdvdcss for Windows.

- on a host with the mingw-w64 cross-compilers:

 You need a cross file to tell Meson about the compiler to use. Some
 generic cross files are provided in the `package/crossfiles' directory,
 which can be customized for your needs. If you run, for example, Debian,
 Ubuntu, or Cygwin under Windows with the necessary mingw64 packages
 installed, it would be:

 for a 32-bit target platform:
  meson setup build-w32 --cross-file package/crossfiles/i686-w64-mingw32.meson
  cd build-w32
  ninja

 or for a 64-bit target platform:
  meson setup build-w64 --cross-file package/crossfiles/i686-w64-mingw32.meson
  cd build-w64
  ninja

- natively on Windows with MSYS + MinGW (www.mingw.org):

 (MSYS is a minimal build environment to compile Unixish projects under
  Windows. It provides all the common Unix tools like sh, GNU Make...)

 You will need to download and install the latest MSYS and MinGW.

 To build libdvdcss you just have to run the following commands:

  meson setup build
  cd build
  ninja

 More about MSYS on our wiki: http://wiki.videolan.org/Win32CompileMSYS
